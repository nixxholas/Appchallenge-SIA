<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<h1>SQ324</h1>
<hr />
<p>
    <b>Depart From:</b>SIN SINGAPORE<br />
    <b>Depart Time:</b>13 OCTOBER 2016 23:55<br />
    <b>Arrive At:</b>AMS AMSTERDAM<br />
    <b>Arrive Time:</b>13 OCTOBER 2015 07:15
    <b>Total Time:</b>13h 20mins<br />
</p>

<div id="seatChart"></div>
<hr />

<script>
let today = new Date();
today.setHours(0, 0, 0, 0);

let days = 90;

let flightDate = new Date("15 Oct 2016");

let startDate = new Date(flightDate);
startDate.setDate(flightDate.getDate() - days);

let todaysPrice = 1936;
let todaysIndex = flightDate.getDate() - today.getDate();

// $.getJSON("./GetRouteTicketHistory/FlightNumber", function(result) {
//     result.foreach(function(v) {
//         console.log(v);
//     });
// });

// Placeholder data
var seatsHistory = [ 8085, 13076, 2029, 18503, 29377, 1145, 31973, 31199, 5794,
    23290, 2746, 21135, 2602, 19848, 4894, 27551, 20590, 9287, 23177, 26841,
    19635, 671, 9725, 16510, 14466, 24436, 24559, 8932, 26474, 18242
].map(function(v) { return Math.floor(v/110 - 6); }).sort((a,b)=>a-b).reverse();

var currentSeats = seatsHistory.map(function(v) {
    return Math.floor(v + 100 - Math.random()*50);
}).sort((a,b)=>a-b).reverse().splice(todaysIndex);

// end placeholder
google.charts.load('current', {'packages':['corechart']});
google.charts.setOnLoadCallback(drawChart);

$(window).resize(function() {
    if (this.resizeTO) clearTimeout(this.resizeIO);
    this.resizeIO = setTimeout(function() {
        $(this).trigger('resizeEnd');
    }, 500);
});

$(window).on('resizeEnd', function() { drawChart(); });

function drawChart() {
    var data = new google.visualization.DataTable();
    data.addColumn('string', 'Date');
    data.addColumn('number', 'Seats History');
    data.addColumn('number', 'Current Seats');
    data.addColumn({type: 'string', role: 'style'});

    seatsHistory.forEach((seats, i) => {
        let dateStamp = new Date();
        dateStamp.setDate(flightDate.getDate() - (30 + i)*days/30);
        dateStamp.setHours(0, 0, 0, 0);
        if (i == 29 - todaysIndex)
            data.addRow(["Today", seats, currentSeats[i],
                    'point { fill-color: white; stroke-color: red; stroke-width: 2; visible: true; size: 4; }']);
        else
            data.addRow([dateStamp.getDate() + " " +
                    ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][dateStamp.getMonth()],
                    seats, currentSeats[i], null]);
    });

    var options = {
        title: 'SQ123',
        curveType: 'function',
        width: '100%',
        height: '100%',
        legend: {position: 'none'},
        hAxis: {
            viewWindow: {
                max: 30,
                min: 0
            },
            gridlines: {
                count : 30
            }
        },
        vAxis: {}
    };

    var dateFormatter = new google.visualization.DateFormat({pattern: 'd MMM'});
    dateFormatter.format(data, 0);

    var chart = new
        google.visualization.LineChart(document.getElementById('seatChart'));

    chart.draw(data, options);
}
</script>

<a href="/Flights/Monitor"></a>